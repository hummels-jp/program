@startuml
title Observer Design Pattern

interface Subject {
    + attach(observer: Observer): void
    + detach(observer: Observer): void
    + notify(): void
}

interface Observer {
    + update(): void
}

class ConcreteSubject {
    - state: int
    + getState(): int
    + setState(state: int): void
}

class ConcreteObserver {
    - subject: ConcreteSubject
    + update(): void
}

Subject <|.. ConcreteSubject
Observer <|.. ConcreteObserver
ConcreteSubject --> Observer : notifies

@enduml